<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule created="1565265398969" id="8ac18e2c6c4dd3c7016c71168cb9480e" language="beanshell" modified="1602494490548" name="TestSF" type="IdentitySelector">
  <Description>This rule is used to select an Identity that is related to the given Identity</Description>
  <Signature returnType="boolean">
    <Inputs>
      <Argument name="log">
        <Description>
          The log object associated with the SailPointContext.
        </Description>
      </Argument>
      <Argument name="context">
        <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
      </Argument>
      <Argument name="identity" type="Identity">
        <Description>
          The identity.
        </Description>
      </Argument>
      <Argument name="roleName" type="String">
        <Description>
          The name of the sailpoint.object.Bundle (role) that is being selected for the Identity. 
          If roles are not applicable to this Identity selection, this value will be void.
        </Description>
      </Argument>
    </Inputs>
    <Returns>
      <Argument name="success">
        <Description>
            True if the selection was successful; false otherwise.
        </Description>
      </Argument>
    </Returns>
  </Signature>
  <Source>import sailpoint.object.*;
import sailpoint.object.ProvisioningPlan;
  import sailpoint.object.*;
  import sailpoint.api.*;
  import sailpoint.object.ProvisioningPlan.AccountRequest;
  import sailpoint.object.ProvisioningPlan.AttributeRequest;
  import org.apache.log4j.Logger;  
  import java.util.List;
  import sailpoint.object.ProvisioningPlan.GenericRequest;
  return context.decrypt("1:iCAlakm5CVUe7+Q6hVJIBA==");
  /*	
  identity = (Identity)context.getObjectByName(Identity.class, "500000709");
  	Application app = context.getObjectByName(Application.class, "SF AppCloud");
    IdentityService service = new IdentityService(context);
    List links = service.getLinks(identity, app);
  	return links;
		return "2";
  ManagedAttribute ma = context.getObjectByName(ManagedAttribute.class,"ED_Electronic_Discount_Permission");
  return "2";
  return ma.getDisplayName();
identity = (Identity)context.getObjectById(Identity.class, "220000001");
*/
return true;</Source>
</Rule>
